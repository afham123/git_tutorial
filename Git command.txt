1. Set user name :  
$ git config --global user.name Your_Name
2. Set user email :
$ git config --global user.email Your_Email
3. See user name :
$ git config --global user.name
4. See user email :
$ git config --global user.email
5. Iitialize empty repository in the pwd.
$ git init
6. List out all the file present in the folder.
$ ls
7. List out all files including hidden files in the folder.
$ ls -lart
8. Show git status
$ git status
9. git starts tracting file
$ git add file_name
10. Start commit 
$ git commit -m "Add commit statement"
11. Clear git bash screen.
$ clear
12. Make blank html file
$ touch file_name.html
13. git starts tracting all files
$ git add -A
14. Revert chnages of a file to previous commit
$ git checkout file_name
15 See the list of changes commited
$ git log
16. See the list of last n changes commited
$ git log -p -n
17. Compair working tree with stagging area.
$ git diff
18. Compare with last commit stagging area.
$ git diff --stagged
19. Commit without stagging
$ git comit -a -m "Add commit statement"
20.  Romove from working directory and staging area.
$ git rm  file_name
21. Remove file from staging area.
$ git rm --chanched file_name
22. Modified form of status
$ git status -s
23. Gitignore stores all the filenames which you don't want to keep track of.
$ touch .gitignore
24. Create branch
$ git branch branch_name
25. See all the branches
$ git branch
26. switch to branch
$ git checkout branch_name
27. Create as well as switch to a branch.
$ git checkout -b branch_name

-----------------------------------------------------------------
Github
-----------------------------------------------------------------
1. Add a remote repository with the name origin
$ git remote add origin copied_url
2. See all the remote repository
$ git remote
3. Push master branch to origin.
$ git push origin master(branch_name)
4. reassign url
$ git remote set origin copied_url
5. Clone repository
$ git clone copied_url
6. pull the repository merge it locally.
$ git pull origin main

